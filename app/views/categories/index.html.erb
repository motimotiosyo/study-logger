<div class="min-h-screen bg-gray-50">
  <div class="container mx-auto px-4 py-8" data-controller="modal">
    
    <!-- ヘッダー -->
    <div class="mb-8">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-3xl font-bold text-gray-900 mb-2">カテゴリ管理</h1>
          <p class="text-gray-600">学習カテゴリを自由に作成・編集できます</p>
        </div>
        <div class="flex space-x-3">
          <%= link_to "ダッシュボードに戻る", dashboard_path, 
              class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors" %>
          <button data-action="click->modal#open" 
              class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            新しいカテゴリ
          </button>
        </div>
      </div>
    </div>

    <!-- 統計サマリー -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
      <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-gray-600">総カテゴリ数</p>
            <p class="text-2xl font-bold text-gray-900"><%= @categories.count %></p>
          </div>
          <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
            </svg>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-gray-600">デフォルトカテゴリ</p>
            <p class="text-2xl font-bold text-gray-900"><%= @categories.select(&:default_category?).count %></p>
          </div>
          <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-100">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-gray-600">カスタムカテゴリ</p>
            <p class="text-2xl font-bold text-gray-900"><%= @categories.select(&:custom_category?).count %></p>
          </div>
          <div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- カテゴリ一覧 -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-100">
      <div class="p-6 border-b border-gray-100">
        <h2 class="text-xl font-semibold text-gray-900">カテゴリ一覧</h2>
      </div>

      <% if @categories.any? %>
        <div class="divide-y divide-gray-100">
          <% @categories.each do |category| %>
            <div class="p-6 hover:bg-gray-50 transition-colors">
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                  <!-- カテゴリ色 -->
                  <div class="w-6 h-6 rounded-full border-2 border-gray-300" 
                       style="background-color: <%= category.color %>"></div>
                  
                  <!-- カテゴリ情報 -->
                  <div>
                    <div class="flex items-center space-x-2 mb-1">
                      <h3 class="text-lg font-medium text-gray-900"><%= category.name %></h3>
                      <% if category.default_category? %>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                          デフォルト
                        </span>
                      <% else %>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                          カスタム
                        </span>
                      <% end %>
                    </div>
                    
                    <div class="flex items-center space-x-4 text-sm text-gray-600">
                      <span>学習時間: <%= sprintf("%.1f", category.total_study_hours) %>時間</span>
                      <span>セッション数: <%= category.sessions_count %>回</span>
                      <span>今週: <%= sprintf("%.1f", category.this_week_seconds / 3600.0) %>時間</span>
                    </div>
                  </div>
                </div>
                
                <!-- アクション -->
                <div class="flex items-center space-x-2">
                  <button onclick="openEditModal('<%= category.id %>', '<%= j category.name %>', '<%= category.color %>')"
                          class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors">
                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                    </svg>
                    編集
                  </button>
                  
                  <% if category.deletable? %>
                    <%= button_to "削除", category_path(category), 
                        method: :delete,
                        data: { 
                          confirm: category.sessions_count > 0 ? 
                            "このカテゴリには#{category.sessions_count}個の学習セッションが紐づいています。削除すると「未分類」に移動されます。続行しますか？" : 
                            "カテゴリ「#{category.name}」を削除しますか？"
                        },
                        class: "inline-flex items-center px-3 py-1.5 border border-red-300 text-xs font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors cursor-pointer" %>
                  <% else %>
                    <span class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-gray-400 bg-gray-100 rounded-md cursor-not-allowed">
                      削除不可
                    </span>
                  <% end %>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <div class="p-12 text-center">
          <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">カテゴリがありません</h3>
          <p class="text-gray-500 mb-6">最初のカテゴリを作成してみましょう。</p>
          <button data-action="click->modal#open" 
                  class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            新しいカテゴリを作成
          </button>
        </div>
      <% end %>
    </div>

    <!-- ヘルプ情報 -->
    <div class="mt-8 p-4 bg-blue-50 rounded-lg">
      <h3 class="text-sm font-medium text-blue-900 mb-2">💡 カテゴリ管理のヒント</h3>
      <ul class="text-sm text-blue-800 space-y-1">
        <li>• デフォルトカテゴリは名前と色を変更できますが、削除はできません</li>
        <li>• カスタムカテゴリは自由に編集・削除できます</li>
        <li>• カテゴリを削除すると、紐づく学習セッションは「未分類」になります</li>
        <li>• カテゴリは最大50個まで作成できます</li>
      </ul>
    </div>

    <!-- カテゴリ作成・編集モーダル（ダッシュボードのモーダルと同じ構造） -->
    <div data-modal-target="modal" 
         class="hidden fixed inset-0 bg-transparent overflow-y-auto h-full w-full z-50"
         data-action="click->modal#closeOnBackdrop">
      <div class="relative top-20 mx-auto p-5 border border-gray-200 w-96 shadow-2xl rounded-lg bg-white">
        <div class="mt-3">
          <h3 id="modal-title" class="text-lg font-medium text-gray-900 text-center mb-4">新しいカテゴリ</h3>
          
          <%= form_with model: Category.new, url: categories_path, local: true, id: "category-form", class: "space-y-4" do |form| %>
            <div>
              <%= form.label :name, "カテゴリ名", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <%= form.text_field :name, 
                  id: "category_name",
                  placeholder: "例：JavaScript学習",
                  class: "block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
            </div>
            
            <div>
              <%= form.label :color, "カテゴリ色", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <div class="grid grid-cols-4 gap-2">
                <% Category::DEFAULT_COLORS.each_with_index do |color, index| %>
                  <label class="cursor-pointer">
                    <%= form.radio_button :color, color, 
                        id: "color_#{index}",
                        class: "sr-only color-radio" %>
                    <div class="w-12 h-12 rounded-full border-2 border-gray-300 hover:border-indigo-500 transition-colors color-option"
                         style="background-color: <%= color %>"
                         data-color="<%= color %>"></div>
                  </label>
                <% end %>
              </div>
            </div>
            
            <div class="flex items-center justify-between pt-4">
              <button type="button" 
                      data-action="click->modal#close"
                      class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                キャンセル
              </button>
              <%= form.submit "作成", id: "submit-btn",
                  class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 cursor-pointer" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('category-form');
  const modalTitle = document.getElementById('modal-title');
  const categoryNameInput = document.getElementById('category_name');
  const submitBtn = document.getElementById('submit-btn');
  const colorOptions = document.querySelectorAll('.color-option');
  const colorRadios = document.querySelectorAll('.color-radio');
  
  // カラー選択の処理
  colorOptions.forEach(option => {
    option.addEventListener('click', function() {
      const color = this.dataset.color;
      
      // 全ての選択を解除
      colorOptions.forEach(opt => {
        opt.classList.remove('ring-2', 'ring-indigo-500');
        opt.classList.add('border-gray-300');
      });
      colorRadios.forEach(radio => radio.checked = false);
      
      // 選択したカラーを有効化
      this.classList.add('ring-2', 'ring-indigo-500');
      this.classList.remove('border-gray-300');
      const radio = document.querySelector(`input[value="${color}"]`);
      if (radio) radio.checked = true;
    });
  });
  
  // デフォルトカラー選択（最初の色）
  if (colorOptions.length > 0) {
    colorOptions[0].click();
  }
  
  // 編集モードの初期化
  window.openEditModal = function(id, name, color) {
    // まずフォームを編集モードに設定
    modalTitle.textContent = 'カテゴリ編集';
    form.action = `/categories/${id}`;
    
    // PATCHメソッドを追加
    let methodInput = form.querySelector('input[name="_method"]');
    if (!methodInput) {
      methodInput = document.createElement('input');
      methodInput.type = 'hidden';
      methodInput.name = '_method';
      form.appendChild(methodInput);
    }
    methodInput.value = 'patch';
    
    categoryNameInput.value = name;
    
    // ボタンテキストを更新
    submitBtn.textContent = '更新';
    submitBtn.value = '更新';
    
    // 色を選択
    const colorOption = document.querySelector(`[data-color="${color}"]`);
    if (colorOption) {
      colorOption.click();
    }
    
    // モーダルを表示
    const modal = document.querySelector('[data-modal-target="modal"]');
    modal.classList.remove('hidden');
  };
  
  // 新規作成時にフォームをリセット（モーダル表示前に実行）
  document.addEventListener('click', function(e) {
    if (e.target.matches('[data-action*="modal#open"]') || e.target.closest('[data-action*="modal#open"]')) {
      // 新規作成モードの初期化（編集ボタン以外の場合のみ）
      setTimeout(() => {
        modalTitle.textContent = '新しいカテゴリ';
        form.action = '/categories';
        
        // PATCHメソッドを削除
        const methodInput = form.querySelector('input[name="_method"]');
        if (methodInput) {
          methodInput.remove();
        }
        
        categoryNameInput.value = '';
        submitBtn.textContent = '作成';
        
        // デフォルトカラー選択
        if (colorOptions.length > 0) {
          colorOptions[0].click();
        }
      }, 10); // 短い遅延でモーダル表示後に実行
    }
  });
});
</script>